TODO
====

4. Exporters
	* Kochbuch-Exporter
		- Layout idea:
			* ListView with all unassigned recipes on the left (do hidden recipes belong here or are the a special section (cf. below)?)
			* Next a horizontal ListView with all the section (+ add / remove buttons for sections)
				and below them a list of the recipes in this list 
				(extending horizontal ListView or further ListViews? If the horizontal ListView is scrollable, then i could only add a vertical ListView inside the horizontal!)
				-> it should also be possible here to reorder the sections themselves!
			* Relevant settings also need to be placed somewhere on this screen, right? (Or there could be several tabs the user can click through for these)
				-> if tabs, then the generate-button should be outside (below?) these tabs
				- settings (at least): title, subtitle, font size
			
			- Recipes are dragable and can be added to a section using drag'n'drop (it should also be possible to drag recipes from one section to another)
		
		-> should be configurable, e.g. the user should be able to define which recipes to export (and which not) and this should be saveable as an export configuration.
		-> this includes the ability to group included recipes (cf. current Kochubuch: Pasta, Reis, Kartoffeln, Brunch, ...)
		-> all of these configurations should be saved as well! (within the json or externally? Maybe in the json, but not written in app-variant?)
	
	* Try to minimze miktex folder size and copy it to a final place!
		-> Change pdflatex path in RBLatexExporter to final path!
		-> i probably also need to change app working dir for this to work!
		=> remove from .gitignore and commit!
	* Remove the QtHtml exporter? -> yes, if miktex can be reduced to a acceptable folder size
	* Export-class should have a (qml-readable) exportPossible-Method (with no QtHTtml-Exporter, it might just test the existance of the pdflatex executable)
4.5 BUG: Group not together directly after inserting Bibimbap into shopping list!

5. Investigate "recipebook as an app from the same codebase" (and implement if possible)
6. Merge functionality
	-> Manuell merge (i.e. look for differences, ask user which to preserve) or also automatic merge (as much as possible anyways, using a common ancestor)
7. TODOs
8. UnitTests
9. Update and finalize Design.txt!

Possibilities for later:
a. Internal binary file format? (to speed up reading and writing and/or decrease data usage on disc)
b. Add pictures to Recipe?  (How to do that with json? Or does this depend on a binary internal file format?)
